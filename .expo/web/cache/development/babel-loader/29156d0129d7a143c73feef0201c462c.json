{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/akash/projects/personal/restaurant-search-native-app/src/screens/SearchScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Stylesheet } from \"react-native-web/dist/index\";\nimport yelp from \"../api/yelp\";\nimport SearhBar from \"../components/searchBar\";\n\nvar SearchScreen = function SearchScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var searchAPI = function searchAPI() {\n    var response;\n    return _regeneratorRuntime.async(function searchAPI$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                term: term,\n                open_now: true,\n                location: 'Toronto'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setError('Something went wrong. Please try in sometime.');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(SearhBar, {\n    term: term,\n    onTermChange: setTerm,\n    onTermSubmit: searchAPI,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Search Screen\"), error.length == 0 ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }\n  }, results.length, \" Results\") : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 72\n    }\n  }, error));\n};\n\nexport default SearchScreen;","map":{"version":3,"sources":["/Users/akash/projects/personal/restaurant-search-native-app/src/screens/SearchScreen.js"],"names":["React","useState","Stylesheet","yelp","SearhBar","SearchScreen","term","setTerm","results","setResults","error","setError","searchAPI","get","params","open_now","location","response","data","businesses","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;SACoBC,U;AAGpB,OAAOC,IAAP;AAGA,OAAOC,QAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBAECJ,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,MAEhBK,IAFgB;AAAA,MAEVC,OAFU;;AAAA,mBAGON,QAAQ,CAAC,EAAD,CAHf;AAAA;AAAA,MAGhBO,OAHgB;AAAA,MAGPC,UAHO;;AAAA,mBAIGR,QAAQ,CAAC,EAAD,CAJX;AAAA;AAAA,MAIhBS,KAJgB;AAAA,MAITC,QAJS;;AAMvB,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGaT,IAAI,CAACU,GAAL,CAAS,SAAT,EAAmB;AACtCC,cAAAA,MAAM,EAAC;AACHR,gBAAAA,IAAI,EAACA,IADF;AAEHS,gBAAAA,QAAQ,EAAC,IAFN;AAGHC,gBAAAA,QAAQ,EAAC;AAHN;AAD+B,aAAnB,CAHb;;AAAA;AAGJC,YAAAA,QAHI;AAWVR,YAAAA,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;AAXU;AAAA;;AAAA;AAAA;AAAA;AAaVR,YAAAA,QAAQ,CAAC,+CAAD,CAAR;;AAbU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAiBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEL,IADV;AAEI,IAAA,YAAY,EAAEC,OAFlB;AAGI,IAAA,YAAY,EAAEK,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,EAMKF,KAAK,CAACU,MAAN,IAAgB,CAAhB,GAAoB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,OAAO,CAACY,MAAf,aAApB,GAA0D,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,KAAP,CAN/D,CADJ;AAUH,CAjCD;;AAmCA,eAAeL,YAAf","sourcesContent":["import React,{useState} from 'react';\nimport {View, Text, Stylesheet} from 'react-native';\n\n//util\nimport yelp from '../api/yelp';\n\n//components\nimport SearhBar from '../components/searchBar';\n\nconst SearchScreen = () => {\n\n    const [term, setTerm] = useState('');\n    const [results, setResults] = useState([]);\n    const [error, setError] = useState('');\n\n    const searchAPI = async () => {\n\n        try{\n            const response = await yelp.get('/search',{\n                params:{\n                    term:term,\n                    open_now:true,\n                    location:'Toronto'\n                }\n            });\n    \n            setResults(response.data.businesses);\n        }catch (err) {\n            setError('Something went wrong. Please try in sometime.');\n        }\n    }\n\n    return(\n        <View>\n            <SearhBar \n                term={term} \n                onTermChange={setTerm} \n                onTermSubmit={searchAPI} />\n            <Text>Search Screen</Text>\n            {error.length == 0 ? <Text>{results.length} Results</Text>:<Text>{error}</Text>}\n        </View>\n    )\n}\n\nexport default SearchScreen;"]},"metadata":{},"sourceType":"module"}